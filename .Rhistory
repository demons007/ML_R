########### Logistic Regression
library(dplyr)
View(iris)
source("~/RStudio/logesticRegresion/logesticRegresion.R")
install.packages("dplyr")
install.packages("ROCR")
install.packages(dplyr)
install.packages("dplyr")
install.packages("dplyr")
source("~/RStudio/logesticRegresion/logesticRegresion.R")
source("~/RStudio/logesticRegresion/logesticRegresion.R")
source("~/RStudio/logesticRegresion/logesticRegresion.R")
########### Logistic Regression
library(dplyr)
library(ggplot2)
str(iris)
View(iris)
library(caTools)
sample.split(iris, SplitRatio = 0.75) -> split_tag
split_tag
subset(iris,split_tag==TRUE) -> train
subset(iris,split_tag==FALSE) -> test
nrow(train)
nrow(test)
glm(vs~wt+disp,train,family = "binomial") -> log_reet1
View(mtcar)
View(mtcars)
glm(Sepal.Length~Petal.Width+disp,train,family = "binomial") -> log_reet1
glm(Sepal.Length~Petal.Width,train,family = "binomial") -> log_reet1
summary(log_reet1)
str(iris)
source("~/RStudio/logesticRegresion/logesticRegresion.R")
library(dplyr)
library(ggplot2)
str(mtcars)
View(mtcars)
library(caTools)
sample.split(mtcars, SplitRatio = 0.75) -> split_tag
split_tag
subset(mtcars,split_tag==TRUE) -> train
subset(mtcars,split_tag==FALSE) -> test
nrow(train)
nrow(test)
glm(vs~wt+disp,train,family = "binomial") -> log_reet1
summary(log_reet1)
a
str(iris)
a = iris
a = select(a,c(1,2,3,4))
a
str(a)
glm(vs~wt+disp,train,family = "binomial") -> log_reet1
summary(log_reet1)
km = kmeans(a, 3)
# kmeans clustering
km = kmeans(a, 3)
install.packages("ggfortify")
glm(vs~wt+disp,train,family = "binomial") -> log_reet1
summary(log_reet1)
# kmeans clustering
km = kmeans(a, 3)
library(ggfortify)
# kmeans clustering
km = kmeans(a, 3)
library(ggfortify)
autoplot(km,a,frame = TRUE)
library(dplyr)
library(ggplot2)
library(ROCR)
View(iris)
str(iris)
a = iris
a = select(a,c(1,2,3,4))
a
str(a)
# kmeans clustering
km = kmeans(a, 3)
library(ggfortify)
autoplot(km,a,frame = TRUE)
### WSS
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
wss
}
wssplot(a)
# kmeans clustering
km = kmeans(a, 4)
library(ggfortify)
autoplot(km,a,frame = TRUE)
source("~/RStudio/logesticRegresion/Clustering_kmeans_titanic.R")
library(dplyr)
library(ggplot2)
str(mtcars)
View(mtcars)
library(caTools)
sample.split(mtcars, SplitRatio = 0.75) -> split_tag
split_tag
subset(mtcars,split_tag==TRUE) -> train
subset(mtcars,split_tag==FALSE) -> test
nrow(train)
nrow(test)
glm(vs~wt+disp,train,family = "binomial") -> log_reet1
summary(log_reet1)
prd = predict(log_reet1,test,type = "response")
prd
table(PredictedValue=prd>0.5,ActualValue = test$vs)
library(ROCR)
ROCRPred = prediction(prd,train$vs)
ROCPerf = performance(ROCRPred,"tpr","fpr")
plot(ROCPerf,colorize=TRUE,print.cutoffs.at=seq(0.1,by=0.1))
### Titanic data set
library(dplyr)
library(ggplot2)
library(ROCR)
View(Titanic)
str(Titanic)
t = select(Titanic,c(1,2,3,5))
str(Titanic)
t = Titanic
t = select(t,c(1,2,3,5))
t = Titanic
t = select(t,c(1:3,5))
View(t)
str(Titanic)
t_ds = Titanic
View(str(Titanic))
t_ds = select(t_ds,c(1:3))
